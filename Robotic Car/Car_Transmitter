#include <ESP8266WiFi.h>
#include <espnow.h>
#include <Adafruit_MPU6050.h>
#include <Adafruit_Sensor.h>
#include <Wire.h>

Adafruit_MPU6050 mpu;

// RECEIVER MAC Address
uint8_t receiverMacAddress[] = {0xAC, 0x0B, 0xFB, 0xD8, 0xEA, 0xF7};  //AC:0B:FB:D8:EA:F7


struct PacketData 
{
  byte xAxisValue;
  byte yAxisValue;
  byte zAxisValue;  
};
PacketData data;

// callback when data is sent
void OnDataSent(uint8_t *mac_addr, uint8_t sendStatus) 
{
  //Serial.println(sendStatus == 0 ? "Message sent" : "Message failed");
}

void setupMPU()
{
  // Try to initialize!
  Wire.begin(4, 5);  // SDA on GPIO4 (D2), SCL on GPIO5 (D1)
  
  if (!mpu.begin()) {
    Serial.println("Failed to find MPU6050 chip");
    while (1) {
      delay(10);
    }
  }
  Serial.println("MPU6050 Found!");

  mpu.setAccelerometerRange(MPU6050_RANGE_8_G);
  mpu.setGyroRange(MPU6050_RANGE_500_DEG);
  mpu.setFilterBandwidth(MPU6050_BAND_21_HZ);
}

void setup()
{
  Serial.begin(115200);
  
  // Set device as a Wi-Fi Station
  WiFi.mode(WIFI_STA);
  WiFi.disconnect();

  // Init ESP-NOW
  if (esp_now_init() != 0) 
  {
    Serial.println("Error initializing ESP-NOW");
    return;
  }
  else
  {
    Serial.println("Success: Initialized ESP-NOW");
  }

  // Register peer
  esp_now_set_self_role(ESP_NOW_ROLE_CONTROLLER);
  esp_now_register_send_cb(OnDataSent);
  esp_now_add_peer(receiverMacAddress, ESP_NOW_ROLE_SLAVE, 1, NULL, 0);

  // Set up MPU6050 sensor
  setupMPU();  
}

void loop() 
{
  /* Get new sensor events with the readings */
  sensors_event_t a, g, temp;
  mpu.getEvent(&a, &g, &temp);

  // Convert accelerometer values to angles
  float xAxisValue = atan2(a.acceleration.x, sqrt(pow(a.acceleration.y, 2) + pow(a.acceleration.z, 2))) * 180.0 / PI;
  float yAxisValue = atan2(a.acceleration.y, sqrt(pow(a.acceleration.x, 2) + pow(a.acceleration.z, 2))) * 180.0 / PI;
  float zAxisValue = g.gyro.z * 180.0 / PI;  // Using gyro for z-axis rotation

  // Constrain values
  xAxisValue = constrain(xAxisValue, -90, 90);
  yAxisValue = constrain(yAxisValue, -90, 90);
  zAxisValue = constrain(zAxisValue, -90, 90);

  // Map to byte values
  data.xAxisValue = map(xAxisValue, -90, 90, 0, 254); 
  data.yAxisValue = map(yAxisValue, -90, 90, 0, 254);
  data.zAxisValue = map(zAxisValue, -90, 90, 0, 254);    

  // Send the data
  esp_now_send(receiverMacAddress, (uint8_t *) &data, sizeof(data));

  // Print values for debugging
  String inputData = "values " + String(xAxisValue) + "  " + String(yAxisValue) + "  " + String(zAxisValue);
  Serial.println(inputData);
  
  delay(50);
}
